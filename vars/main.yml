---
# The role is disabled by default, so you do not get in trouble.
# Checked in tasks/main.yml which includes tasks.yml if enabled.
podman_enabled: True

# use default config by default
# set to True to enable the configuration task
podman_configure: True

###############################################################################
# libpod.conf for root: /etc/container/libpod.conf
###############################################################################
podman_conf_cgroup_manager: 'systemd'
podman_conf_events_logger: 'file'

# Default libpod namespace
# If libpod is joined to a namespace, it will see only containers and pods
# that were created in the same namespace, and will create new containers and
# pods in that namespace.
# The default namespace is "", which corresponds to no namespace. When no
# namespace is set, all containers and pods are visible
podman_conf_namespace: ''

###############################################################################
# /etc/container/registries.conf
###############################################################################
# default registries that podman is searching for container images
# i.e. 'registry.access.redhat.com', 'docker.io', 'registry.fedoraproject.org',
# 'quay.io', 'registry.centos.org'
# default is docker.io only
podman_search_registries:
 - 'docker.io'
# insecure registries (no TLS) that podman is searching for container images
# i.e. localhost:5000
podman_insecure_registries: []
# blocked registries for podman
podman_blocked_registries: []

###############################################################################
# /etc/container/storage.conf
###############################################################################
podman_storage_driver: 'overlay'
# storage driver mount options for podman
podman_storage_mountopt: 'nodev'

###############################################################################
# libpod.conf for user: ~/.config/containers/libpod.conf
###############################################################################
# unprivileged users that are allowd to run podman
# and get custom ~/.config/containers/libpod.conf
podman_users:
  gitlab: '100000:65535'
# if you want i.e. the user vagrant to start unprivileged containers
# you can do the following:
# podman_users:
#   vagrant: '165536:65535'
#
# do manual creation of /etc/subuid and /etc/subguid
# see vars/*.yml files for OS specific settings
podman_manual_mapping: true

